{"version":3,"sources":["reducer/reducer.js","store/store.js","serviceWorker.js","components/test/ServiceInformaionComponent.js","components/NavigationBar/NavigationBarComponent.js","res/MainIntroIMG.png","res/spaceShip.png","components/MainIntroduction/MainIntrodutionComponent.js","components/FooterBar/FooterBarComponent.js","components/Kakao/GetKakaoTokenComponent.js","components/SignUp/signUpComponent.js","components/Modal/CautionModalComponent.js","components/UserList/UserCardComponent.js","components/UserList/UserCardSkeletonComponent.js","service/userList.js","components/UserList/UserListComponent.js","components/ProjectList/ProjectCardComponent.js","components/ProjectList/ProjectCardSkeletonComponent.js","service/projectList.js","components/ProjectList/ProjecListComponent.js","components/ProjectCreate/ProjectCreateComponent.js","action/modal.js","containers/ServiceInformaion.js","action/RESTAPI.js","containers/NavigationBar.js","action/logout.js","containers/MainIntroduction.js","containers/FooterBar.js","containers/KakaoLogin.js","containers/signUp.js","containers/CautionModal.js","containers/UserList.js","containers/ProjectList.js","containers/ProjectCreate.js","index.js"],"names":["initState","APP_VERSION","TEST_VALUE","ACCESS_TOKEN","REFRESH_TOKEN","USER_LOGIN","USER_ID","USER_JOBTAG","USER_NAME","USER_PROFILE","USER_LOGIN_TYPE","ERROR_STATE","ERROR_MSG","ERROR_TARGET_PATH","reducer","state","action","console","log","type","size","msg","path","accessToken","refreshToken","persistConfig","key","storage","enhancedReducer","persistReducer","createStore","applyMiddleware","ReduxThunk","Boolean","window","location","hostname","match","queryString","require","ServiceInformaion","props","parsed","parse","search","clickSetTestValueButton","bind","clickOpenErrorModalButton","pathname","this","setTestValue","openErrorModal","className","onClick","clickGoToIndexButton","href","title","Component","NavigationBar","loginButtonForKakao","logoutButton","logout","version","id","xmlns","viewBox","d","fill","fill-rule","clip-rule","enable-background","height","width","MainIntroductionCompoment","class","src","spaceImg","alt","img","FooterBarCompoment","getKakaoToken","code","SignUp","blogUrl","jobTag","inputIsChange","jobTagIsChange","pressSingUpButton","event","setState","target","name","value","signUpUser","placeholder","onChange","CautionModal","closeModal","closeErrorModal","stroke","stroke-linecap","stroke-linejoin","stroke-width","UserCard","blogLink","profileImage","UserCardSkeleton","getUserList","a","Axios","get","result","data","UserList","pageLoading","userListData","RESTAPI","Promise","resolve","setTimeout","listView","Object","keys","length","map","userData","profileImageUrl","ProjectCard","projectID","managerID","content","date","delete","stateID","ProjectCardSkeleton","getProjectList","ProjectList","projectListData","projectData","ProjectCreate","contentDataIsChange","titleDataIsChange","pressProjectCreateButton","createProject","required","editor","ClassicEditor","config","toolbar","onReady","editing","view","change","writer","setStyle","document","getRoot","getData","onBlur","onFocus","openErrorMessage","error","dispatch","getState","connect","text","modal","ServiceInformaionComponent","NavigationBarComponent","MainIntroductionComponent","FooterBarComponent","kakaoCode","HARMONY_URL_HOST","access_token","refresh_token","headers","userToken","userTokenType","response","request","GetKakaoTokenComponent","post","status","SignUpComponent","undefined","CautionModalComponent","UserListComponent","projectListComponent","userid","projectCreateComponent","persistor","persistStore","store","ReactDOM","render","basename","loading","StrictMode","exact","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iNAAMA,EAAY,CAChBC,YAAa,MACbC,WAAY,EAEZC,aAAc,GACdC,cAAe,GAEfC,YAAY,EACZC,QAAS,GACTC,YAAa,GACbC,UAAW,GACXC,aAAc,GACdC,gBAAiB,GAEjBC,aAAa,EACbC,UAAW,GACXC,kBAAmB,IAmDNC,EAhDC,WAAgC,IAA/BC,EAA8B,uDAAtBf,EAAWgB,EAAW,uCAI7C,OAHAC,QAAQC,IAAIH,GACZE,QAAQC,IAAIF,GAEJA,EAAOG,MACb,IAAK,6BACH,OAAO,2BAAKJ,GAAZ,IAAmBb,WAAYc,EAAOI,OACxC,IAAK,2BACH,OAAO,2BACFL,GADL,IAEEH,UAAWI,EAAOI,KAAKC,IACvBV,aAAa,EACbE,kBAAmBG,EAAOI,KAAKE,OAEnC,IAAK,4BACH,OAAO,2BAAKP,GAAZ,IAAmBH,UAAW,GAAID,aAAa,IACjD,IAAK,yBACH,OAAO,2BACFI,GADL,IAEEZ,aAAca,EAAOI,KAAKG,YAC1BnB,cAAeY,EAAOI,KAAKI,eAE/B,IAAK,wBACH,OAAO,2BACFT,GADL,IAEEV,YAAY,EACZC,QAASU,EAAOI,KAAKd,QACrBC,YAAaS,EAAOI,KAAKb,YACzBC,UAAWQ,EAAOI,KAAKZ,UACvBC,aAAcO,EAAOI,KAAKX,aAC1BC,gBAAiB,UAEnB,IAAK,iBACH,OAAO,2BACFK,GADL,IAEEZ,aAAc,GACdC,cAAe,GACfC,YAAY,EACZC,QAAS,GACTC,YAAa,GACbC,UAAW,GACXC,aAAc,GACdC,gBAAiB,KAEvB,QACE,OAAOK,I,gBCzDPU,EAAgB,CACpBC,IAAK,OACLC,Q,OAAAA,GAGIC,EAAkBC,YAAeJ,EAAeX,GAEvCgB,cAAYF,EAAgBG,YAAgBC,M,OCFvCC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,sEChBAC,EAAcC,EAAQ,IAEPC,E,kDAInB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAJR1B,MAAQ,CACN2B,OAAQ,IAKR,EAAK3B,MAAM2B,OAASJ,EAAYK,MAAMT,OAAOC,SAASS,QACtD3B,QAAQC,IAAI,EAAKH,MAAM2B,QAEvB,EAAKG,wBAA0B,EAAKA,wBAAwBC,KAA7B,gBAC/B,EAAKC,0BAA4B,EAAKA,0BAA0BD,KAA/B,gBAPhB,E,wDAUnB,WACEZ,OAAOC,SAASa,SAAW,M,qCAG7B,WACEC,KAAKR,MAAMS,aAAa,W,uCAG1B,WACED,KAAKR,MAAMU,eAAe,8D,oBAG5B,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,oBAAIA,UAAU,WAAd,0BACA,qBAAIA,UAAU,UAAd,+BAA2CH,KAAKR,MAAMxC,eACtD,wBAAQmD,UAAU,4DAA4DC,QAASJ,KAAKK,qBAA5F,yBACA,wBAAQF,UAAU,4DAA4DC,QAASJ,KAAKJ,wBAA5F,mBACA,wBAAQO,UAAU,4DAA4DC,QAASJ,KAAKF,0BAA5F,4BACA,4BAAIE,KAAKR,MAAMvC,aACf,iDAAmB,mBAAGqD,KAAK,0BAA0BC,MAAM,UAAxC,qBAAnB,SAAsF,mBAAGD,KAAK,4BAA4BC,MAAM,WAA1C,iCACtF,mBAAGD,KAAK,yCAAR,0E,GApCuCE,aCD1BC,E,kDACnB,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IAEDkB,oBAAsB,EAAKA,oBAAoBb,KAAzB,gBAC3B,EAAKc,aAAe,EAAKA,aAAad,KAAlB,gBAJH,E,uDAMnB,WACEZ,OAAOC,SAASoB,KACd,8J,0BAEJ,WACEN,KAAKR,MAAMoB,W,oBAGb,WACE,OACE,sBAAKT,UAAU,aAAf,UACE,sBAAKA,UAAU,gCAAf,UACE,qBAAKA,UAAU,8CAAf,SACE,mBAAGG,KAAK,IAAR,SACE,sBACEH,UAAU,8CACVU,QAAQ,MACRC,GAAG,SACHC,MAAM,6BACNC,QAAQ,cALV,UAOE,4BACE,sBACEC,EAAE,+IAIN,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,6BAIN,sBAAKd,UAAU,qCAAf,UACE,mBAAGA,UAAU,+BAA+BG,KAAK,YAAjD,6CAGA,mBAAGH,UAAU,+BAA+BG,KAAK,eAAjD,mDAGA,mBAAGH,UAAU,0BAA0BG,KAAK,IAA5C,sDAIF,qBAAKH,UAAU,gCAAf,SACGH,KAAKR,MAAMpC,WACV,8BACE,sBAAK+C,UAAU,wDAAf,UACE,oBAAGA,UAAU,6BAAb,UACGH,KAAKR,MAAMjC,UADd,2CAGA,wBACEW,KAAK,SACLiC,UAAU,+MACVC,QAASJ,KAAKW,aAHhB,SAKE,sBAAKR,UAAU,wDAAf,qCAEE,qBACEY,MAAM,6BACNZ,UAAU,0CACVa,QAAQ,YACRE,KAAK,eAJP,SAME,sBACEC,YAAU,UACVF,EAAE,6KACFG,YAAU,wBAQtB,8BACE,wBACElD,KAAK,SACLiC,UAAU,wMACVC,QAASJ,KAAKU,oBAHhB,SAKE,sBAAKP,UAAU,wDAAf,UACE,yEACA,sBACEW,GAAG,OACHX,UAAU,qCACVkB,oBAAkB,gBAClBC,OAAO,MACPN,QAAQ,YACRO,MAAM,MACNR,MAAM,6BAPR,UASE,sBAAME,EAAE,mCACR,sBAAMA,EAAE,shCAQtB,8B,GAxHmCT,aCH5B,MAA0B,yCCA1B,MAA0B,sCCGpBgB,E,kDACnB,WAAYhC,GAAQ,uCACZA,G,0CAGR,WACE,OACE,sBAAKW,UAAU,kDAAf,UAEN,qBAAKsB,MAAM,wBAAX,SACG,sBAAKA,MAAM,4BAAX,UACG,sBAAKA,MAAM,iDAAX,UACG,qBAAKA,MAAM,4CAAX,qIACA,qBAAKA,MAAM,eAAX,4NACA,qBAAKA,MAAM,YAAX,SACA,wBACSvD,KAAK,SACLiC,UAAU,wMACVC,QAASJ,KAAKU,oBAHvB,SAKS,sBAAKP,UAAU,wDAAf,UACE,qDACA,sBACEW,GAAG,OACHX,UAAU,qCACVkB,oBAAkB,gBAClBC,OAAO,MACPN,QAAQ,YACRO,MAAM,MACNR,MAAM,6BAPR,UASE,sBAAME,EAAE,mCACR,sBAAMA,EAAE,ohCAMxB,qBAAKQ,MAAM,4CAAX,SACG,qBAAKA,MAAM,UAAX,SACG,sBAAKA,MAAM,kDAAX,UACA,qBAAKC,IAAKC,EAAUC,IAAI,iBACrB,qBAAKH,MAAM,wBAAX,qMAOP,qBAAKtB,UAAU,+BAAf,SACE,mBAAGA,UAAU,yCAAb,iIAEF,8BACE,qBAAKuB,IAAKG,EAAKD,IAAI,0B,GArD0BpB,aCDlCsB,E,kDACnB,WAAYtC,GAAQ,uCACZA,G,0CAGR,WACE,OACE,sBAAKW,UAAU,sEAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,mBAAGA,UAAU,wCAAb,uBAEF,sBAAKA,UAAU,gBAAf,UACE,mBAAGA,UAAU,iDAAb,0DACA,mBAAGA,UAAU,iDAAb,yDACA,mBAAGA,UAAU,iDAAb,6E,GAdsCK,aCA1CnB,EAAcC,EAAQ,IAEPkC,E,kDAInB,WAAYhC,GAAQ,IAAD,8BACjB,cAAMA,IAJR1B,MAAQ,CACN2B,OAAQ,IAKR,EAAK3B,MAAM2B,OAASJ,EAAYK,MAAMT,OAAOC,SAASS,QACtD3B,QAAQC,IAAI,EAAKH,MAAM2B,QAJN,E,qDAMnB,WACEO,KAAKR,MAAMuC,cAAc/B,KAAKlC,MAAM2B,OAAOuC,Q,oBAG7C,WACE,OACE,sBAAK7B,UAAU,sDAAf,UACE,qBAAKA,UAAU,QAAf,SACA,sBACEY,MAAM,6BACNZ,UAAU,uCACVa,QAAQ,YACRE,KAAK,eAJP,UAME,sBACEC,YAAU,UACVF,EAAE,8LACFG,YAAU,YAEZ,sBACED,YAAU,UACVF,EAAE,qPACFG,YAAU,YAEZ,sBACED,YAAU,UACVF,EAAE,0GACFG,YAAU,iBAId,sBAAMjB,UAAU,wBAAhB,0H,GAzC+CK,a,QCFlCyB,E,kDAKnB,WAAYzC,GAAQ,IAAD,8BACjB,cAAMA,IALR1B,MAAQ,CACNoE,QAAQ,GACRC,OAAO,IAKP,EAAKC,cAAgB,EAAKA,cAAcvC,KAAnB,gBACrB,EAAKwC,eAAiB,EAAKA,eAAexC,KAApB,gBACtB,EAAKyC,kBAAoB,EAAKA,kBAAkBzC,KAAvB,gBALR,E,iDAOnB,SAAc0C,GAGZvC,KAAKwC,SAAL,2BAAkBxC,KAAKlC,OAAvB,kBAA8ByE,EAAME,OAAOC,KAAMH,EAAME,OAAOE,SAC9D3E,QAAQC,IAAI+B,KAAKlC,S,4BAEnB,SAAeyE,GAGbvC,KAAKwC,SAAL,2BAAkBxC,KAAKlC,OAAvB,IAA6BqE,OAAOI,EAAME,OAAO3B,Q,+BAEnD,WACE9C,QAAQC,IAAI,SACZ+B,KAAKR,MAAMoD,WAAW5C,KAAKlC,MAAMoE,QAAQlC,KAAKlC,MAAMqE,U,oBAGtD,WACE,OACE,qBAAKhC,UAAU,8CAAf,SACE,sBAAKA,UAAU,qDAAf,UAEE,oBAAIA,UAAU,uCAAd,oBAEA,oBAAIA,UAAU,6CAAd,iGAGA,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,mEAAf,SACE,qBAAKA,UAAU,8GAAf,SACE,qBACEY,MAAM,6BACNU,MAAM,UACNT,QAAQ,YACRE,KAAK,eAJP,SAME,sBACEC,YAAU,UACVF,EAAE,iTACFG,YAAU,kBAKlB,uBACEsB,KAAK,UACLxE,KAAK,OACL2E,YAAY,2BACZ1C,UAAU,sIACV2C,SAAU9C,KAAKoC,mBAKnB,oBAAIjC,UAAU,6CAAd,uCAGA,sBAAKA,UAAU,gBAAf,UACE,wBAAOsB,MAAM,2BAAb,UACE,uBACEvD,KAAK,QACLwE,KAAK,OACLjB,MAAM,+BACNrB,QAASJ,KAAKqC,eACdvB,GAAG,MAEL,oBAAIW,MAAM,mBAAV,SACE,sBAAMA,MAAM,6DAAZ,0BAKJ,wBAAOA,MAAM,2BAAb,UACE,uBACEvD,KAAK,QACLwE,KAAK,OACLjB,MAAM,+BACNrB,QAASJ,KAAKqC,eACdvB,GAAG,MAEL,oBAAIW,MAAM,mBAAV,SACE,sBAAMA,MAAM,+DAAZ,2BAKJ,wBAAOA,MAAM,2BAAb,UACE,uBACEvD,KAAK,QACLwE,KAAK,OACLjB,MAAM,+BACNrB,QAASJ,KAAKqC,eACdvB,GAAG,MAEL,oBAAIW,MAAM,mBAAV,SACE,sBAAMA,MAAM,+DAAZ,4BAON,qBAAKA,MAAM,OAAX,SACE,wBAAQvD,KAAK,SAASkC,QAASJ,KAAKsC,kBAAmBb,MAAM,sHAA7D,+B,GAlHwBjB,aCAfuC,E,kDACnB,WAAYvD,GAAQ,IAAD,8BACjB,cAAMA,IAEDwD,WAAa,EAAKA,WAAWnD,KAAhB,gBAHD,E,8CAKnB,WACE7B,QAAQC,IAAI,qBACZ+B,KAAKR,MAAMyD,gBAAgBjD,KAAKR,MAAM5B,qB,oBAGxC,WACE,IAAMF,EAAcsC,KAAKR,MAAM9B,YACzBC,EAAYqC,KAAKR,MAAM7B,UAC7B,OACE,8BACGD,EACC,qBAAKyC,UAAU,mFAAf,SACE,qBAAKsB,MAAM,WAAX,SACE,sBAAKA,MAAM,qCAAX,UACE,sBAAKA,MAAM,0DAAX,UACE,sBAAKtB,UAAU,0CAAf,UACE,qBACEY,MAAM,6BACNZ,UAAU,uBACVe,KAAK,OACLF,QAAQ,YACRkC,OAAO,eALT,SAOE,sBACEC,iBAAe,QACfC,kBAAgB,QAChBC,eAAa,IACbpC,EAAE,2IAGN,sBAAMQ,MAAM,kCAAZ,sBAEF,8BACE,iCACE,mBAAGA,MAAM,sFAKf,qBAAKA,MAAM,2BAAX,SAAuC9D,IAEvC,qBAAK8D,MAAM,6BAAX,SACE,wBACErB,QAASJ,KAAKgD,WACdvB,MAAM,8EAFR,yBAWR,S,GA3DgCjB,a,wBCArB8C,E,kDAOnB,WAAY9D,GAAQ,IAAD,8BACjB,cAAMA,IAPR1B,MAAQ,CACN4E,KAAK,GACLa,SAAS,GACTpB,OAAO,GACPqB,aAAa,IAMb,EAAK1F,MAAM4E,KAAO,EAAKlD,MAAMkD,MAAQ,OACrC,EAAK5E,MAAMyF,SAAW,EAAK/D,MAAM+D,UAAY,8BAC7C,EAAKzF,MAAMqE,OAAS,EAAK3C,MAAM2C,QAAU,IACzC,EAAKrE,MAAM0F,aAAe,EAAKhE,MAAMgE,cAAgB,oFAPpC,E,0CAWnB,WACE,OACE,qBAAKrD,UAAU,sBAAf,SACE,sBAAKsB,MAAM,yDAAX,UACE,qBAAKA,MAAM,oHAAX,SACE,qBACEC,IAAK1B,KAAKlC,MAAM0F,aAChB5B,IAAI,gBAGR,sBAAKH,MAAM,OAAX,UACE,mBAAGA,MAAM,6BAAT,SAAuCzB,KAAKlC,MAAM4E,OAClD,sBAAKjB,MAAM,4CAAX,UACA,qBACMV,MAAM,6BACNU,MAAM,UACNT,QAAQ,YACRE,KAAK,eAJX,SAMM,sBACEC,YAAU,UACVF,EAAE,iTACFG,YAAU,cAGhB,mBAAGjB,UAAU,WAAb,SAAyBH,KAAKlC,MAAMyF,cAEtC,qBAAK9B,MAAM,eAEX,qBAAKA,MAAM,uBAAX,SACE,sBAAKA,MAAM,OAAX,UACE,mBAAGA,MAAM,+BAAT,sCACA,oBAAIA,MAAM,cAAV,SACA,sBAAMA,MAAM,6DAAZ,wC,GAnDsBjB,aCAjBiD,E,kDACnB,WAAYjE,GAAQ,uCACZA,G,0CAGR,WACE,OACE,qBAAKW,UAAU,oCAAf,SACE,sBAAKsB,MAAM,yDAAX,UAEE,qBAAKA,MAAM,sHAEX,sBAAKA,MAAM,OAAX,UAEA,qBAAKA,MAAM,kCACT,sBAAKA,MAAM,4CAAX,UACA,qBACMV,MAAM,6BACNU,MAAM,UACNT,QAAQ,YACRE,KAAK,eAJX,SAMM,sBACEC,YAAU,UACVF,EAAE,iTACFG,YAAU,cAId,qBAAKK,MAAM,qCAEf,qBAAKA,MAAM,eAEX,qBAAKA,MAAM,uBAAX,SACE,sBAAKA,MAAM,OAAX,UACE,qBAAKA,MAAM,sCACX,qBAAKA,MAAM,mD,GApCmBjB,a,iBCAjCkD,EAAW,uCAAG,4BAAAC,EAAA,4DACE,mFADF,kBAIEC,IAAMC,IAAN,UAHA,qFADF,cAIbC,EAJa,yBAUZA,EAAOC,KAAKA,MAVA,sCAcnB/F,QAAQC,IAAR,MAdmB,8DAAH,qDCGH+F,E,kDAKnB,WAAYxE,GAAQ,IAAD,8BACjB,cAAMA,IALR1B,MAAQ,CACNmG,aAAa,EACbC,aAAc,IAEG,E,4FAGnB,4BAAAP,EAAA,+EAKyBQ,IALzB,cAKUL,EALV,gBAQY,IAAIM,SAAQ,SAACC,GACjBC,WAAWD,EAAS,QAT5B,cAaMrE,KAAKwC,SAAS,CAAEyB,aAAa,EAAOC,aAAcJ,IAbxD,8DAoBM9F,QAAQC,IAAI,iCApBlB,UAuBY,IAAImG,SAAQ,SAACC,GACjBC,WAAWD,EAAS,QAxB5B,iF,0EA8BA,WAEE,IAAIE,EAWJ,OARIC,OAAOC,KAAKzE,KAAKlC,MAAMoG,cAAcQ,OAAS,IAChDH,EAAWvE,KAAKlC,MAAMoG,aAAaS,KAAI,SAACC,GAEtC,OADA5G,QAAQC,IAAI2G,GACJ,qBAAKzE,UAAU,MAAf,SACR,cAAC,EAAD,CAAUuC,KAAMkC,EAASlC,KAAMa,SAAUqB,EAASrB,SAAUpB,OAAQyC,EAASzC,OAAQqB,aAAcoB,EAASC,wBAK9G,sBAAK1E,UAAU,yCAAf,UACE,qBAAKA,UAAU,wCAAf,SACE,mBAAGA,UAAU,yCAAb,sKAKDH,KAAKlC,MAAMmG,YACV,sBAAK9D,UAAU,mFAAf,UAEE,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,SAIJ,qBAAKA,UAAU,mFAAf,SAEGoE,W,GA9EyB/D,aCHjBsE,E,kDAUnB,WAAYtF,GAAQ,IAAD,8BACjB,cAAMA,IAVR1B,MAAQ,CACNiH,UAAW,GACXC,UAAW,GACXzE,MAAO,GACP0E,QAAS,GACTC,KAAM,GACNC,OAAQ,GACRC,QAAS,IAMT,EAAKtH,MAAMiH,UAAY,EAAKvF,MAAMuF,WAAa,IAC/C,EAAKjH,MAAMkH,UAAY,EAAKxF,MAAMwF,WAAa,IAC/C,EAAKlH,MAAMyC,MAAQ,EAAKf,MAAMe,OAAS,8CACvC,EAAKzC,MAAMmH,QAAU,EAAKzF,MAAMyF,SAAW,kEAC3C,EAAKnH,MAAMoH,KAAO,EAAK1F,MAAM0F,MAAQ,aACrC,EAAKpH,MAAMqH,OAAS,EAAK3F,MAAM2F,SAAU,EACzC,EAAKrH,MAAMsH,QAAU,EAAK5F,MAAM4F,SAAW,IAV1B,E,0CAanB,WACE,OACE,qBAAKjF,UAAU,mFAAf,SACE,sBAAKsB,MAAM,4DAAX,UACE,sBAAKA,MAAM,oCAAX,UACE,sBAAMA,MAAM,2BAAZ,SAAwCzB,KAAKlC,MAAMoH,OACnD,mBACEzD,MAAM,iEACNnB,KAAK,IAFP,mCAOF,sBAAKmB,MAAM,OAAX,UACE,mBACEA,MAAM,uDACNnB,KAAK,IAFP,SAIGN,KAAKlC,MAAMyC,QAEd,qBAAKJ,UAAU,yDAAf,SACE,mBAAGsB,MAAM,kCAAT,SACGzB,KAAKlC,MAAMmH,eAIlB,sBAAKxD,MAAM,yCAAX,UACE,mBAAGA,MAAM,gCAAgCnB,KAAK,IAA9C,gCAGA,8BACE,mBAAGmB,MAAM,oBAAoBnB,KAAK,IAAlC,SASE,oBAAImB,MAAM,0BAAV,mE,GA/DyBjB,aCApB6E,E,kDACnB,WAAY7F,GAAQ,uCACZA,G,0CAGR,WACE,OACE,qBAAKW,UAAU,iGAAf,SACE,sBAAKsB,MAAM,4DAAX,UACE,sBAAKA,MAAM,oCAAX,UAEA,qBAAKA,MAAM,kCACT,mBAAGA,MAAM,gEAAgEnB,KAAK,IAA9E,qCAEF,sBAAKmB,MAAM,OAAX,UACE,mBACEA,MAAM,uDACNnB,KAAK,IAFP,SAKE,qBAAKmB,MAAM,oCAEb,sBAAKtB,UAAU,yDAAf,UACA,qBAAKsB,MAAM,uCACX,qBAAKA,MAAM,uCACX,qBAAKA,MAAM,6CAGb,sBAAKA,MAAM,yCAAX,UAEE,qBAAKA,MAAM,kCACX,8BACE,oBAAGA,MAAM,oBAAoBnB,KAAK,IAAlC,UACE,qBAAKmB,MAAM,0DAEjB,qBAAKA,MAAM,kD,GAnC4BjB,aCApC8E,EAAc,uCAAG,4BAAA3B,EAAA,4DACD,mFADC,kBAIDC,IAAMC,IAAN,UAHA,qFADC,cAIhBC,EAJgB,yBAUfA,EAAOC,KAAKA,MAVG,sCActB/F,QAAQC,IAAR,MAdsB,8DAAH,qDCGNsH,E,kDAKjB,WAAY/F,GAAQ,IAAD,8BACnB,cAAMA,IALN1B,MAAQ,CACJmG,aAAa,EACbuB,gBAAgB,IAKpB,EAAK9E,oBAAsB,EAAKA,oBAAoBb,KAAzB,gBAC3B,EAAKc,aAAe,EAAKA,aAAad,KAAlB,gBAJD,E,4FAOrB,4BAAA8D,EAAA,+EAKyBQ,IALzB,cAKUL,EALV,gBAQY,IAAIM,SAAQ,SAACC,GACjBC,WAAWD,EAAS,QAT5B,cAaMrE,KAAKwC,SAAS,CAAEyB,aAAa,EAAOuB,gBAAiB1B,IAb3D,8DAoBM9F,QAAQC,IAAI,oCApBlB,UAuBY,IAAImG,SAAQ,SAACC,GACjBC,WAAWD,EAAS,QAxB5B,iF,uFA8BA,WACEpF,OAAOC,SAASoB,KACd,8J,0BAGJ,WACEN,KAAKR,MAAMoB,W,oBAGb,WAEE,IAAI2D,EAgBJ,OAZEA,EADCC,OAAOC,KAAKzE,KAAKlC,MAAM0H,iBAAiBd,OAAS,EACvC1E,KAAKlC,MAAM0H,gBAAgBb,KAAI,SAACc,GACzC,OACE,cAAC,EAAD,CAAaV,UAAWU,EAAY3E,GAAIkE,UAAWS,EAAYT,UAAWzE,MAAOkF,EAAYlF,MAAO0E,QAASQ,EAAYR,QAASC,KAAMO,EAAYP,KAAMC,OAAQM,EAAYN,OAAQC,QAASK,EAAYL,aAGnM,8BACV,mBAAGjF,UAAU,yCAAb,2FAOF,qBAAKA,UAAU,yCAAf,SACKH,KAAKlC,MAAMmG,YACZ,gCAEE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,OAGF,8BAECM,U,GApF8B/D,a,0BCDpBkF,G,kDAKnB,WAAYlG,GAAQ,IAAD,8BACjB,cAAMA,IALR1B,MAAQ,CACNyC,MAAM,GACN0E,QAAQ,IAKR,EAAKU,oBAAsB,EAAKA,oBAAoB9F,KAAzB,gBAC3B,EAAK+F,kBAAoB,EAAKA,kBAAkB/F,KAAvB,gBACzB,EAAKgG,yBAA2B,EAAKA,yBAAyBhG,KAA9B,gBALf,E,uDAOnB,SAAoBkE,GAClB/D,KAAKwC,SAAL,2BAAkBxC,KAAKlC,OAAvB,IAA6BmH,QAAQlB,O,+BAGvC,SAAkBxB,GAChBvC,KAAKwC,SAAL,2BAAkBxC,KAAKlC,OAAvB,IAA6ByC,MAAMgC,EAAME,OAAOE,W,sCAGlD,WACE3E,QAAQC,IAAI+B,KAAKlC,OACjBkC,KAAKR,MAAMsG,cAAc9F,KAAKlC,MAAMyC,MAAMP,KAAKlC,MAAMmH,W,oBAGvD,WAAU,IAAD,OACP,OACE,qBAAK9E,UAAU,8CAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,sBAAKA,UAAU,8DAAf,UACE,sBAAKsB,MAAM,OAAX,UACE,wBAAOA,MAAM,wBAAb,4CACQ,sBAAMA,MAAM,eAAZ,kBAER,uBACEvD,KAAK,OACLuD,MAAM,sCACNiB,KAAK,QACL5B,GAAG,QACHgC,SAAU9C,KAAK4F,kBACfG,UAAQ,OAGZ,cAAC,WAAD,CACEC,OAAQC,KACRlC,KAAK,+CACLmC,OAAQ,CAENC,QAAS,CAAE,OAAQ,SAAU,OAAQ,iBAEvCC,QAAS,SAACJ,GAERhI,QAAQC,IAAI,0BAA2B+H,GACvCA,EAAOK,QAAQC,KAAKC,QAAO,SAAAC,GACzBA,EAAOC,SACL,SACA,QACAT,EAAOK,QAAQC,KAAKI,SAASC,eAInC7D,SAAU,SAACP,EAAOyD,GAChB,IAAMjC,EAAOiC,EAAOY,UACpB,EAAKjB,oBAAoB5B,GACzB/F,QAAQC,IAAI,CAAEsE,QAAOyD,SAAQjC,UAE/B8C,OAAQ,SAACtE,EAAOyD,GACdhI,QAAQC,IAAI,QAAS+H,IAEvBc,QAAS,SAACvE,EAAOyD,GACfhI,QAAQC,IAAI,SAAU+H,MAG1B,8BACI,wBACE9H,KAAK,SACLiC,UAAU,+MACVC,QAASJ,KAAK6F,yBAHhB,SAKE,qBAAK1F,UAAU,wDAAf,SACE,0F,GAhFuBK,aCH9BuG,GAAmB,eAACC,EAAD,uDAAO,QAAQ3I,EAAf,qFAAwB,WAAO4I,EAAUC,GAAjB,SAAAvD,EAAA,sDACpDsD,EAAS,CAAE/I,KAAM,2BAA4BC,KAAM,CAACC,IAAK4I,EAAM3I,KAAKA,KADhB,2CAAxB,yDCyBjB8I,oBAnBf,SAAgCrJ,GAE9B,MAAO,CACLd,YAAac,EAAMd,YACnBC,WAAYa,EAAMb,eAGtB,SAAmCgK,GAEjC,MAAO,CACLhH,aAAc,SAACmH,GACbH,ECVsB,uCAAe,WAAOA,EAAUC,GAAjB,SAAAvD,EAAA,sDACzCsD,EAAS,CAAE/I,KAAM,6BAA8BC,KAAM,SADZ,2CAAf,0DDYxB+B,eAAe,SAAC8G,GACdC,EAASI,GAAuBL,QAKvBG,CAGbG,GETaH,oBAhBf,SAAgCrJ,GAE9B,MAAO,CACLV,WAAYU,EAAMV,WAClBG,UAAWO,EAAMP,cAGrB,SAAmC0J,GAEjC,MAAO,CACLrG,OAAO,WACLqG,ECdgB,uCAAM,WAAOA,EAAUC,GAAjB,SAAAvD,EAAA,sDACxBsD,EAAS,CAAE/I,KAAM,iBAAkBC,KAAM,KADjB,2CAAN,6DDmBPgJ,CAGbI,GEXaJ,oBATf,SAAgCrJ,GAE9B,MAAO,MAET,SAAmCmJ,GAEjC,MAAO,KAGME,CAGbK,GCHaL,oBATf,SAAgCrJ,GAE9B,MAAO,MAET,SAAmCmJ,GAEjC,MAAO,KAGME,CAGbM,GCEaN,oBAbf,SAAgCrJ,GAE9B,MAAO,MAET,SAAmCmJ,GAEjC,MAAO,CACLlF,cAAe,SAAC2F,GACdT,ELCuB,SAACS,GAAD,8CAAe,WAAOT,EAAUC,GAAjB,uBAAAvD,EAAA,6DAGpCgE,EACJ,0FAJwC,kBAOnB/D,IAAMC,IAAN,UALrB,0KAKqB,OAA8B6D,IAPX,OAOlC5D,EAPkC,OAalCxF,EAAcwF,EAAOC,KAAK6D,aAC1BrJ,EAAeuF,EAAOC,KAAK8D,cACjCZ,EAAS,CACP/I,KAAM,yBACNC,KAAM,CAAEG,YAAaA,EAAaC,aAAcA,KAjBV,kDAsBxC0I,EACEI,GACE,4MACA,MAzBoC,yBAgCxCrJ,QAAQC,IAAR,UAAe0J,IAhCyB,UAiCnB/D,IAAMC,IAAN,UAAa8D,GAAoB,CACpDG,QAAS,CACPC,UAAWb,IAAWhK,aACtB8K,cAAe,WApCqB,QAiClClE,EAjCkC,OAyCxCmD,EAAS,CACP/I,KAAM,wBACNC,KAAM,CACJd,QAASyG,EAAOC,KAAKA,KAAKjD,GAC1BxD,YAAawG,EAAOC,KAAKA,KAAK5B,OAC9B5E,UAAWuG,EAAOC,KAAKA,KAAKrB,KAC5BlF,aAAcsG,EAAOC,KAAKA,KAAKc,mBAKnC5F,OAAOC,SAASa,SAAW,IApDa,mDAwDpC,KAAMkI,SAKRhB,EAASI,GAAuB,gEAAe,YACtC,KAAMa,QAKfjB,EACEI,GACE,2JACA,MAIJJ,EACEI,GACE,4MACA,MA7EkC,kEAAf,wDKDdlD,CAAsBuD,QAKtBP,CAGbgB,GCFahB,oBAdf,SAAgCrJ,GAE9B,MAAO,MAGT,SAAmCmJ,GAEjC,MAAO,CACLrE,WAAY,SAACW,EAASpB,GACpB8E,ENqFoB,SAAC1D,EAASpB,GAAV,8CAAqB,WAAO8E,EAAUC,GAAjB,eAAAvD,EAAA,+EAKtBC,IAAMwE,KAAN,UAHvB,yFAGyD,CACrD,SAAW,GAAX,OAAe7E,GACf,OAAS,GAAT,OAAapB,IACb,CACA2F,QAAS,CACPC,UAAWb,IAAWhK,aACtB8K,cAAe,WAXwB,OAKrClE,EALqC,OAc3C9F,QAAQC,IAAI6F,GACZmD,EAASI,GAAuB,uEAAiB,MAfN,gDAiB3CrJ,QAAQC,IAAI,KAAMgK,SAASlE,MAC3B/F,QAAQC,IAAI,KAAMgK,SAASI,QAC3BrK,QAAQC,IAAI,KAAMgK,SAASH,SAC3Bb,EAASI,GAAuB,sJApBW,yDAArB,wDMrFXlD,CAAmBZ,EAASpB,QAK5BgF,CAGbmB,GCGanB,oBApBf,SAAgCrJ,GAE9B,MAAO,CACLJ,YAAaI,EAAMJ,YACnBC,UAAWG,EAAMH,UACjBC,kBAAmBE,EAAMF,sBAG7B,SAAmCqJ,GAEjC,MAAO,CACL/G,eAAe,SAAC8G,GACdC,EAASI,GAAuBL,KAElC/D,gBAAgB,SAAC5E,GACf4I,ETb2B,SAAC5I,GAAD,8CAAU,WAAO4I,EAAUC,GAAjB,SAAAvD,EAAA,sDACvCsD,EAAS,CAAE/I,KAAM,mCAGRqK,GAANlK,IACCY,OAAOC,SAASa,SAAW1B,GALQ,2CAAV,wDSalBgJ,CAAwBhJ,QAKxB8I,CAGbqB,GCbarB,oBAXf,SAAgCrJ,GAE9B,MAAO,MAGT,SAAmCmJ,GAEjC,MAAO,KAIME,CAGbsB,GCIatB,oBAdf,SAAgCrJ,GAE9B,MAAO,MAGT,SAAmCmJ,GAEjC,MAAO,CACL/G,eAAe,SAAC8G,GACdC,EAASI,GAAuBL,QAKvBG,CAGbuB,GCNavB,oBAdf,SAAgCrJ,GAE9B,MAAO,MAGT,SAAmCmJ,GAEjC,MAAO,CACLnB,cAAc,SAACvF,EAAM0E,GACnBgC,EV8GuB,SAAC1G,EAAM0E,GAAP,8CAAmB,WAAOgC,EAASC,GAAhB,eAAAvD,EAAA,+EAKvBC,IAAMwE,KAAN,UAHvB,oFAGyD,CACrD,MAAQ,GAAR,OAAY7H,GACZ,QAAU,GAAV,OAAc0E,IACd,CACA6C,QAAS,CACPC,UAAWb,IAAWhK,aACtB8K,cAAe,QACfW,OAAQzB,IAAW7J,WAZqB,OAKtCyG,EALsC,OAe5C9F,QAAQC,IAAI6F,GACZmD,EAASI,GAAuB,qGAAsB,iBAhBV,gDAkB5CrJ,QAAQC,IAAI,KAAMgK,SAASlE,MAC3B/F,QAAQC,IAAI,KAAMgK,SAASI,QAC3BrK,QAAQC,IAAI,KAAMgK,SAASH,SAC3Bb,EAASI,GAAuB,8KArBY,yDAAnB,wDU9GdlD,CAAsB5D,EAAM0E,QAK5BkC,CAGbyB,ICAIC,I,OAAYC,YAAaC,IAE/BC,IAASC,OACP,cAAC,IAAD,CAAeC,SAAS,IAAxB,SACE,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACA,cAAC,IAAD,CAAaI,QAAS,KAAMN,UAAWA,GAAvC,SACE,eAAC,IAAMO,WAAP,WACE,cAAC,GAAD,IACA,eAAC,IAAD,CAAOC,OAAK,EAAChL,KAAK,IAAlB,UAAsB,cAAC,GAAD,IAA4B,cAAC,GAAD,IAA+B,cAAC,GAAD,OACjF,cAAC,IAAD,CAAOgL,OAAK,EAAChL,KAAK,gBAAlB,SAAkC,cAAC,GAAD,MAClC,cAAC,IAAD,CAAOgL,OAAK,EAAChL,KAAK,cAAlB,SAAgC,cAAC,GAAD,MAChC,eAAC,IAAD,CAAOgL,OAAK,EAAChL,KAAK,UAAlB,UAA4B,cAAC,GAAD,IAA4B,cAAC,GAAD,IAAqB,cAAC,GAAD,OAC7E,eAAC,IAAD,CAAOgL,OAAK,EAAChL,KAAK,YAAlB,UAA8B,cAAC,GAAD,IAA4B,cAAC,GAAD,IAAuB,cAAC,GAAD,OACjF,eAAC,IAAD,CAAOgL,OAAK,EAAChL,KAAK,eAAlB,UAAiC,cAAC,GAAD,IAA4B,cAAC,GAAD,IAA0B,cAAC,GAAD,OACvF,eAAC,IAAD,CAAOgL,OAAK,EAAChL,KAAK,iBAAlB,UAAmC,cAAC,GAAD,IAA4B,cAAC,GAAD,IAA4B,cAAC,GAAD,gBAKjGqI,SAAS4C,eAAe,ShC2FpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.e368b993.chunk.js","sourcesContent":["const initState = {\n  APP_VERSION: \"0.1\",\n  TEST_VALUE: 0,\n\n  ACCESS_TOKEN: \"\",\n  REFRESH_TOKEN: \"\",\n\n  USER_LOGIN: false,\n  USER_ID: \"\",\n  USER_JOBTAG: \"\",\n  USER_NAME: \"\",\n  USER_PROFILE: \"\",\n  USER_LOGIN_TYPE: \"\",\n\n  ERROR_STATE: false,\n  ERROR_MSG: \"\",\n  ERROR_TARGET_PATH: \"\",\n};\n\nconst reducer = (state = initState, action) => {\n  console.log(state);\n  console.log(action);\n  // 액션 처리\n  switch (action.type) {\n    case \"ServiceInformaion/SET_TEXT\":\n      return { ...state, TEST_VALUE: action.size };\n    case \"Service/ERROR_MODAL_OPEN\":\n      return {\n        ...state,\n        ERROR_MSG: action.size.msg,\n        ERROR_STATE: true,\n        ERROR_TARGET_PATH: action.size.path,\n      };\n    case \"Service/ERROR_MODAL_CLOSE\":\n      return { ...state, ERROR_MSG: \"\", ERROR_STATE: false };\n    case \"Service/SET_TOKEN_INFO\":\n      return {\n        ...state,\n        ACCESS_TOKEN: action.size.accessToken,\n        REFRESH_TOKEN: action.size.refreshToken,\n      };\n    case \"Service/SET_USER_INFO\":\n      return {\n        ...state,\n        USER_LOGIN: true,\n        USER_ID: action.size.USER_ID,\n        USER_JOBTAG: action.size.USER_JOBTAG,\n        USER_NAME: action.size.USER_NAME,\n        USER_PROFILE: action.size.USER_PROFILE,\n        USER_LOGIN_TYPE: \"kakao\",\n      };\n      case \"Service/LOGOUT\":\n        return {\n          ...state,\n          ACCESS_TOKEN: \"\",\n          REFRESH_TOKEN: \"\",\n          USER_LOGIN: false,\n          USER_ID: \"\",\n          USER_JOBTAG: \"\",\n          USER_NAME: \"\",\n          USER_PROFILE: \"\",\n          USER_LOGIN_TYPE: \"\",\n        };\n    default:\n      return state;\n  }\n};\nexport default reducer;\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport ReduxThunk from 'redux-thunk';\r\nimport reducer from \"../reducer/reducer\";\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage\r\n};\r\n\r\nconst enhancedReducer = persistReducer(persistConfig, reducer);\r\n\r\nexport default createStore(enhancedReducer,applyMiddleware(ReduxThunk));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\n\nconst queryString = require(\"query-string\");\n\nexport default class ServiceInformaion extends Component {\n  state = {\n    parsed: {},\n  };\n  constructor(props) {\n    super(props);\n\n    this.state.parsed = queryString.parse(window.location.search);\n    console.log(this.state.parsed);\n\n    this.clickSetTestValueButton = this.clickSetTestValueButton.bind(this);\n    this.clickOpenErrorModalButton = this.clickOpenErrorModalButton.bind(this);\n  }\n\n  clickGoToIndexButton(){\n    window.location.pathname = \"/\"\n  }\n\n  clickSetTestValueButton(){\n    this.props.setTestValue(\"pong!\");\n  }\n\n  clickOpenErrorModalButton(){\n    this.props.openErrorModal(\"테스트 테스트 테스트\");\n  }\n\n  render() {\n    return (\n      <div className=\"m-6\">\n        <h1 className=\"text-4xl\">service Info</h1>\n        <h2 className=\"text-xl\">service version : {this.props.APP_VERSION}</h2>\n        <button className=\"bg-red-500 hover:bg-red-700 rounded-lg p-1 m-1 text-white\" onClick={this.clickGoToIndexButton}>go to index</button>\n        <button className=\"bg-red-500 hover:bg-red-700 rounded-lg p-1 m-1 text-white\" onClick={this.clickSetTestValueButton}>ping!</button>\n        <button className=\"bg-red-500 hover:bg-red-700 rounded-lg p-1 m-1 text-white\" onClick={this.clickOpenErrorModalButton}>openErrorModal</button>\n        <p>{this.props.TEST_VALUE}</p>\n        <div>Icons made by <a href=\"https://www.freepik.com\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n        <a href='https://www.freepik.com/vectors/school'>School vector created by pch.vector - www.freepik.com</a>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport kakaoLogin from \"../../res/kakao_login_medium_narrow.png\";\n\nexport default class NavigationBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loginButtonForKakao = this.loginButtonForKakao.bind(this);\n    this.logoutButton = this.logoutButton.bind(this);\n  }\n  loginButtonForKakao() {\n    window.location.href =\n      \"https://kauth.kakao.com/oauth/authorize?client_id=dab58a800514cc429576cf0f84c83ab0&redirect_uri=http://harmony.seongrok.net/kakao/auth&response_type=code\";\n  }\n  logoutButton() {\n    this.props.logout();\n  }\n\n  render() {\n    return (\n      <div className=\"bg-gray-50\">\n        <div className=\"flex lg:flex-row flex-col p-3\">\n          <div className=\"flex flex-auto flex-row justify-center pt-2\">\n            <a href=\"/\">\n              <svg\n                className=\"fill-current text-gray-700 text-2xl w-7 h-7\"\n                version=\"1.1\"\n                id=\"Capa_1\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 454 454\"\n              >\n                <g>\n                  <path\n                    d=\"M0,0v454h454V0H0z M331.204,345.802H266.4v-86.399h-78.801v86.399h-64.803V108.198h64.803v86.4H266.4v-86.4h64.804V345.802\n\t\tL331.204,345.802z\"\n                  />\n                </g>\n                <g></g>\n                <g></g>\n                <g></g>\n                <g></g>\n                <g></g>\n                <g></g>\n                <g></g>\n                <g></g>\n                <g></g>\n                <g></g>\n                <g></g>\n                <g></g>\n                <g></g>\n                <g></g>\n                <g></g>\n              </svg>\n            </a>\n          </div>\n          <div className=\"flex-auto flex justify-center pt-3\">\n            <a className=\"text-base text-gray-700 pr-4\" href=\"/userlist\">\n              파트너 찾기\n            </a>\n            <a className=\"text-base text-gray-700 pr-4\" href=\"/projectlist\">\n              프로젝트 찾기\n            </a>\n            <a className=\"text-base text-gray-700\" href=\"/\">\n              프로젝트 등록\n            </a>\n          </div>\n          <div className=\"flex-auto flex justify-center\">\n            {this.props.USER_LOGIN ? (\n              <div>\n                <div className=\"flex flex-row flex-nowrap align-middle justify-center\">\n                  <p className=\"text-sm text-gray-700 pt-3\">\n                    {this.props.USER_NAME}님 안녕하세요\n                  </p>\n                  <button\n                    type=\"button\"\n                    className=\"border border-green-300 text-green-300 rounded-md px-4 py-2 ml-3 transition duration-500 ease select-none hover:text-white hover:bg-green-300 hover:border-green-300 focus:outline-none focus:shadow-outline\"\n                    onClick={this.logoutButton}\n                  >\n                    <div className=\"flex flex-row flex-nowrap align-middle justify-center\">\n                      로그아웃\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        className=\"fill-current text-2xl w-4 h-4 ml-2 mt-1\"\n                        viewBox=\"0 0 20 20\"\n                        fill=\"currentColor\"\n                      >\n                        <path\n                          fill-rule=\"evenodd\"\n                          d=\"M3 3a1 1 0 00-1 1v12a1 1 0 102 0V4a1 1 0 00-1-1zm10.293 9.293a1 1 0 001.414 1.414l3-3a1 1 0 000-1.414l-3-3a1 1 0 10-1.414 1.414L14.586 9H7a1 1 0 100 2h7.586l-1.293 1.293z\"\n                          clip-rule=\"evenodd\"\n                        />\n                      </svg>\n                    </div>\n                  </button>\n                </div>\n              </div>\n            ) : (\n              <div>\n                <button\n                  type=\"button\"\n                  className=\"border border-yellow-400 text-yellow-400 rounded-md px-4 py-2 mr-3 mt-2 lg:mt-0 transition duration-500 ease select-none hover:text-white hover:bg-yellow-400 focus:outline-none focus:shadow-outline\"\n                  onClick={this.loginButtonForKakao}\n                >\n                  <div className=\"flex flex-row flex-nowrap align-middle justify-center\">\n                    <span>Kakao로 시작하기!</span>\n                    <svg\n                      id=\"Bold\"\n                      className=\"fill-current text-2xl w-6 h-6 ml-2\"\n                      enable-background=\"new 0 0 24 24\"\n                      height=\"512\"\n                      viewBox=\"0 0 24 24\"\n                      width=\"512\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                      <path d=\"m9.462 9.306-.692 1.951h1.383z\" />\n                      <path d=\"m12 1c-6.627 0-12 4.208-12 9.399 0 3.356 2.246 6.301 5.625 7.963-1.299 4.45-1.333 4.47-1.113 4.599.276.161.634-.005 5.357-3.311.692.097 1.404.148 2.131.148 6.627 0 12-4.208 12-9.399s-5.373-9.399-12-9.399zm-5.942 12.023c0 .362-.311.657-.692.657s-.692-.295-.692-.657v-4.086h-1.08c-.375 0-.679-.302-.679-.673s.303-.674.678-.674h3.545c.375 0 .679.302.679.673s-.305.674-.679.674h-1.08zm5.378.648c-.72 0-.587-.565-.919-1.195h-2.111c-.329.625-.2 1.195-.919 1.195-.693.001-.815-.421-.604-1.071l1.656-4.33c.117-.33.471-.669.922-.679.452.01.807.349.923.679 1.093 3.39 2.654 5.402 1.052 5.401zm3.939-.092h-2.221c-1.159 0-.454-1.565-.663-5.301 0-.379.317-.688.707-.688s.707.308.707.688v4.04h1.471c.366 0 .663.283.663.63-.001.348-.298.631-.664.631zm5.419-.518c-.025.181-.122.344-.269.454-.955.721-1.661-1.381-2.593-2.271l-.24.239v1.5c0 .38-.31.688-.693.688-.382 0-.692-.308-.692-.688v-4.705c0-.379.31-.688.692-.688s.692.308.692.688v1.478c1.277-.958 1.985-2.67 2.792-1.869.792.786-.848 1.474-1.527 2.422 1.604 2.212 1.909 2.267 1.838 2.752z\" />\n                    </svg>\n                  </div>\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n        <hr></hr>\n      </div>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/MainIntroIMG.756755c1.png\";","export default __webpack_public_path__ + \"static/media/spaceShip.80deded5.png\";","import React, { Component } from \"react\";\nimport img from \"../../res/MainIntroIMG.png\";\nimport spaceImg from \"../../res/spaceShip.png\"\nexport default class MainIntroductionCompoment extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"motion-safe:animate-fadeIn min-h-screen pattern\">\n        \n<div class=\"m-auto max-w-6xl p-12\">\n   <div class=\"flex flex-col md:flex-row\">\n      <div class=\"md:w-1/2 max-w-md flex flex-col justify-center\">\n         <div class=\"md:text-5xl text-2xl uppercase font-black\">마음 맞는 팀원과 함께 프로젝트를 시작하세요</div>\n         <div class=\"text-xl mt-4\">시작하기 어려웠던 프로젝트, 참여하기 힘들었던 프로젝트 저희가 도와드립니다</div>\n         <div class=\"my-5 h-16\">\n         <button\n                  type=\"button\"\n                  className=\"border border-yellow-400 text-yellow-400 rounded-md px-4 py-2 mr-3 mt-2 lg:mt-0 transition duration-500 ease select-none hover:text-white hover:bg-yellow-400 focus:outline-none focus:shadow-outline\"\n                  onClick={this.loginButtonForKakao}\n                >\n                  <div className=\"flex flex-row flex-nowrap align-middle justify-center\">\n                    <span>Join kakaoAccount</span>\n                    <svg\n                      id=\"Bold\"\n                      className=\"fill-current text-2xl w-6 h-6 ml-2\"\n                      enable-background=\"new 0 0 24 24\"\n                      height=\"512\"\n                      viewBox=\"0 0 24 24\"\n                      width=\"512\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                      <path d=\"m9.462 9.306-.692 1.951h1.383z\" />\n                      <path d=\"m12 1c-6.627 0-12 4.208-12 9.399 0 3.356 2.246 6.301 5.625 7.963-1.299 4.45-1.333 4.47-1.113 4.599.276.161.634-.005 5.357-3.311.692.097 1.404.148 2.131.148 6.627 0 12-4.208 12-9.399s-5.373-9.399-12-9.399zm-5.942 12.023c0 .362-.311.657-.692.657s-.692-.295-.692-.657v-4.086h-1.08c-.375 0-.679-.302-.679-.673s.303-.674.678-.674h3.545c.375 0 .679.302.679.673s-.305.674-.679.674h-1.08zm5.378.648c-.72 0-.587-.565-.919-1.195h-2.111c-.329.625-.2 1.195-.919 1.195-.693.001-.815-.421-.604-1.071l1.656-4.33c.117-.33.471-.669.922-.679.452.01.807.349.923.679 1.093 3.39 2.654 5.402 1.052 5.401zm3.939-.092h-2.221c-1.159 0-.454-1.565-.663-5.301 0-.379.317-.688.707-.688s.707.308.707.688v4.04h1.471c.366 0 .663.283.663.63-.001.348-.298.631-.664.631zm5.419-.518c-.025.181-.122.344-.269.454-.955.721-1.661-1.381-2.593-2.271l-.24.239v1.5c0 .38-.31.688-.693.688-.382 0-.692-.308-.692-.688v-4.705c0-.379.31-.688.692-.688s.692.308.692.688v1.478c1.277-.958 1.985-2.67 2.792-1.869.792.786-.848 1.474-1.527 2.422 1.604 2.212 1.909 2.267 1.838 2.752z\" />\n                    </svg>\n                  </div>\n                </button>\n         </div>\n      </div>\n      <div class=\"flex md:justify-end w-full md:w-1/2 -mt-5\">\n         <div class=\"bg-dots\">\n            <div class=\"shadow-2xl max-w-md z-10 rounded-full mt-6 ml-4\">\n            <img src={spaceImg} alt=\"MainIntroIMG\"></img>\n               <div class=\"text-sm p-10 bg-white\">나는 똑똑한 것이 아니라 단지 문제를 더 오래 연구할 뿐이다. -Albert Einstein</div>\n            </div>\n         </div>\n      </div>\n   </div>\n</div>\n\n        <div className=\"flex flex-row justify-center\">\n          <p className=\"text-xl text-gray-700 lg:text-4xl pt-5\">좋은 사람들과 함께 프로젝트를 시작하세요!</p>\n        </div>\n        <div>\n          <img src={img} alt=\"MainIntroIMG\"></img>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class FooterBarCompoment extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"flex flex-col justify-center lg:flex-row h-28 bg-gray-100 mb-1 pt-5\">\n        <div className=\"flex justify-center\">\n          <p className=\"text-gray-700 text-4xl font-bold mr-5\">Harmony</p>\n        </div>\n        <div className=\"flex flex-col\">\n          <p className=\"text-xs text-gray-300 lg:text-left text-center\">ⓒ 2021. SeongrokLEE All Rights Reserved</p>\n          <p className=\"text-xs text-gray-300 lg:text-left text-center\">Icons made by Freepik from www.flaticon.com</p>\n          <p className=\"text-xs text-gray-300 lg:text-left text-center\">School vector created by pch.vector - www.freepik.com</p>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nconst queryString = require(\"query-string\");\n\nexport default class MainIntroductionCompoment extends Component {\n  state = {\n    parsed: {},\n  };\n  constructor(props) {\n    super(props);\n\n    this.state.parsed = queryString.parse(window.location.search);\n    console.log(this.state.parsed);\n  }\n  componentDidMount() {\n    this.props.getKakaoToken(this.state.parsed.code);\n  }\n\n  render() {\n    return (\n      <div className=\"grid grid-cols-1 justify-items-center animate-pulse\">\n        <div className=\"mt-32\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"h-20 w-20 fill-current text-gray-600\"\n          viewBox=\"0 0 20 20\"\n          fill=\"currentColor\"\n          >\n          <path\n            fill-rule=\"evenodd\"\n            d=\"M6.625 2.655A9 9 0 0119 11a1 1 0 11-2 0 7 7 0 00-9.625-6.492 1 1 0 11-.75-1.853zM4.662 4.959A1 1 0 014.75 6.37 6.97 6.97 0 003 11a1 1 0 11-2 0 8.97 8.97 0 012.25-5.953 1 1 0 011.412-.088z\"\n            clip-rule=\"evenodd\"\n            />\n          <path\n            fill-rule=\"evenodd\"\n            d=\"M5 11a5 5 0 1110 0 1 1 0 11-2 0 3 3 0 10-6 0c0 1.677-.345 3.276-.968 4.729a1 1 0 11-1.838-.789A9.964 9.964 0 005 11zm8.921 2.012a1 1 0 01.831 1.145 19.86 19.86 0 01-.545 2.436 1 1 0 11-1.92-.558c.207-.713.371-1.445.49-2.192a1 1 0 011.144-.83z\"\n            clip-rule=\"evenodd\"\n            />\n          <path\n            fill-rule=\"evenodd\"\n            d=\"M10 10a1 1 0 011 1c0 2.236-.46 4.368-1.29 6.304a1 1 0 01-1.838-.789A13.952 13.952 0 009 11a1 1 0 011-1z\"\n            clip-rule=\"evenodd\"\n            />\n        </svg>\n            </div>\n        <span className=\"text-sm text-gray-600\">사용자 인증정보를 불러오고 있습니다..</span>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class SignUp extends Component {\n  state = {\n    blogUrl:\"\",\n    jobTag:\"\"\n  }\n  constructor(props) {\n    super(props);\n\n    this.inputIsChange = this.inputIsChange.bind(this);\n    this.jobTagIsChange = this.jobTagIsChange.bind(this);\n    this.pressSingUpButton = this.pressSingUpButton.bind(this);\n  }\n  inputIsChange(event){\n    // console.log(event.target.name);\n    // console.log(event.target.value);\n    this.setState({...this.state,[event.target.name]:event.target.value});\n    console.log(this.state)\n  }\n  jobTagIsChange(event){\n    // console.log(event);\n    // console.log(event.target.id);\n    this.setState({...this.state,jobTag:event.target.id});\n  }\n  pressSingUpButton(){\n    console.log(\"click\")\n    this.props.signUpUser(this.state.blogUrl,this.state.jobTag);\n  }\n\n  render() {\n    return (\n      <div className=\"flex bg-gray-50 min-h-screen justify-center\">\n        <div className=\"flex flex-col w-screen border-gray-600 m-6 lg:w-96\">\n          {/* 타이틀 텍스트 */}\n          <h1 className=\"text-3xl font-semibold text-gray-600\">SignUp</h1>\n          {/* 블로그 링크 입력 */}\n          <h2 className=\"mt-6 text-gray-600 text-base font-semibold\">\n            GitPage 또는 포트폴리오 사이트 링크\n          </h2>\n          <div className=\"relative mt-3\">\n            <div className=\"absolute flex border border-transparent left-0 top-0 h-full w-10\">\n              <div className=\"flex items-center justify-center rounded-tl rounded-bl z-10 bg-gray-100 text-gray-600 text-lg h-full w-full\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  class=\"h-5 w-5\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"currentColor\"\n                >\n                  <path\n                    fill-rule=\"evenodd\"\n                    d=\"M12.586 4.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2 2 0 11-2.828-2.828l3-3z\"\n                    clip-rule=\"evenodd\"\n                  />\n                </svg>\n              </div>\n            </div>\n            <input\n              name=\"blogUrl\"\n              type=\"text\"\n              placeholder=\"http://harmony.github.io\"\n              className=\"text-sm sm:text-base relative w-full border rounded placeholder-gray-400 focus:border-indigo-400 focus:outline-none py-2 pr-2 pl-12\"\n              onChange={this.inputIsChange}\n            />\n          </div>\n\n          {/* 직업선택 Radio Button */}\n          <h2 className=\"mt-3 text-gray-600 text-base font-semibold\">\n            희망 분야\n          </h2>\n          <div className=\"flex flex-row\">\n            <label class=\"inline-flex items-center\">\n              <input\n                type=\"radio\"\n                name=\"jobs\"\n                class=\"form-checkbox text-green-500\"\n                onClick={this.jobTagIsChange}\n                id=\"1\"\n              />\n              <td class=\"px-2 text-center\">\n                <span class=\"bg-green-200 text-green-600 py-1 px-3 rounded-full text-xs\">\n                  BackEnd\n                </span>\n              </td>\n            </label>\n            <label class=\"inline-flex items-center\">\n              <input\n                type=\"radio\"\n                name=\"jobs\"\n                class=\"form-checkbox text-green-500\"\n                onClick={this.jobTagIsChange}\n                id=\"2\"\n              />\n              <td class=\"px-2 text-center\">\n                <span class=\"bg-purple-200 text-purple-600 py-1 px-3 rounded-full text-xs\">\n                  FrontEnd\n                </span>\n              </td>\n            </label>\n            <label class=\"inline-flex items-center\">\n              <input\n                type=\"radio\"\n                name=\"jobs\"\n                class=\"form-checkbox text-green-500\"\n                onClick={this.jobTagIsChange}\n                id=\"3\"\n              />\n              <td class=\"px-2 text-center\">\n                <span class=\"bg-yellow-200 text-yellow-600 py-1 px-3 rounded-full text-xs\">\n                  Design\n                </span>\n              </td>\n            </label>\n          </div>\n          {/* SignUp Button */}\n          <div class=\"mt-6\">\n            <button type=\"button\" onClick={this.pressSingUpButton} class=\"w-full focus:outline-none text-white text-sm py-2.5 px-5 rounded-md bg-green-500 hover:bg-green-600 hover:shadow-lg\">\n              SignUp\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class CautionModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.closeModal = this.closeModal.bind(this);\n  }\n  closeModal() {\n    console.log(\"close Error Modal\");\n    this.props.closeErrorModal(this.props.ERROR_TARGET_PATH);\n  }\n\n  render() {\n    const ERROR_STATE = this.props.ERROR_STATE;\n    const ERROR_MSG = this.props.ERROR_MSG;\n    return (\n      <div>\n        {ERROR_STATE ? (\n          <div className=\"flex fixed h-full w-full items-center justify-center bg-black bg-opacity-75 z-50\">\n            <div class=\"absolute\">\n              <div class=\"rounded-lg shadow-lg bg-white my-3\">\n                <div class=\"flex justify-between border-b border-gray-100 px-5 py-4\">\n                  <div className=\"flex flex-row inline-block align-middle\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      className=\"h-6 w-6 text-red-600\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                    >\n                      <path\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                        stroke-width=\"2\"\n                        d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\n                      />\n                    </svg>\n                    <span class=\"font-bold text-gray-700 text-lg\">Error</span>\n                  </div>\n                  <div>\n                    <button>\n                      <i class=\"fa fa-times-circle text-red-500 hover:text-red-600 transition duration-150\"></i>\n                    </button>\n                  </div>\n                </div>\n\n                <div class=\"px-10 py-5 text-gray-600\">{ERROR_MSG}</div>\n\n                <div class=\"px-5 py-4 flex justify-end\">\n                  <button\n                    onClick={this.closeModal}\n                    class=\"text-sm py-2 px-3 text-gray-500 hover:text-gray-600 transition duration-150\"\n                  >\n                    OK\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class UserCard extends Component {\n  state = {\n    name:\"\",\n    blogLink:\"\",\n    jobTag:\"\",\n    profileImage:\"\"\n  }\n  constructor(props) {\n    super(props);\n\n    // 상태 설정\n    this.state.name = this.props.name || \"User\";\n    this.state.blogLink = this.props.blogLink || \"http://harmony.seongrok.net\";\n    this.state.jobTag = this.props.jobTag || \"1\";\n    this.state.profileImage = this.props.profileImage || \"http://k.kakaocdn.net/dn/5b4p3/btqXfJNCwln/xkWdK3xaopQHiqj3kG3DZ0/img_640x640.jpg\";\n\n  }\n\n  render() {\n    return (\n      <div className=\"w-full lg:w-72 h-56\">\n        <div class=\"relative bg-white rounded-3xl py-6 px-6 my-4 shadow-xl\">\n          <div class=\" text-white flex items-center absolute rounded-full shadow-xl bg-gray-200 h-16 w-16 left-4 -top-6 overflow-hidden\">\n            <img\n              src={this.state.profileImage}\n              alt=\"UserImage\"\n            ></img>\n          </div>\n          <div class=\"mt-8\">\n            <p class=\"text-xl font-semibold my-2\">{this.state.name}</p>\n            <div class=\"flex space-x-2 text-gray-400 text-sm my-3\">\n            <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  class=\"h-5 w-5\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"currentColor\"\n                >\n                  <path\n                    fill-rule=\"evenodd\"\n                    d=\"M12.586 4.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2 2 0 11-2.828-2.828l3-3z\"\n                    clip-rule=\"evenodd\"\n                  />\n                </svg>\n              <p className=\"truncate\">{this.state.blogLink}</p>\n            </div>\n            <div class=\"border-t-2\"></div>\n\n            <div class=\"flex justify-between\">\n              <div class=\"my-2\">\n                <p class=\"font-semibold text-base mb-2\">전문분야</p>\n                <td class=\"text-center\">\n                <span class=\"bg-green-200 text-green-600 py-1 px-3 rounded-full text-xs\">\n                  BackEnd\n                </span>\n              </td>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class UserCardSkeleton extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"w-full lg:w-72 h-56 animate-pulse\">\n        <div class=\"relative bg-white rounded-3xl py-6 px-6 my-4 shadow-xl\">\n            {/* Profile Img */}\n          <div class=\" text-white flex items-center absolute rounded-full shadow-xl left-4 -top-6 overflow-hidden h-16 w-16 bg-gray-200\">\n          </div>\n          <div class=\"mt-8\">\n              {/* User Name */}\n          <div class=\"h-6 bg-gray-200 rounded w-3/4\"></div>\n            <div class=\"flex space-x-2 text-gray-400 text-sm my-3\">\n            <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  class=\"h-5 w-5\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"currentColor\"\n                >\n                  <path\n                    fill-rule=\"evenodd\"\n                    d=\"M12.586 4.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2 2 0 11-2.828-2.828l3-3z\"\n                    clip-rule=\"evenodd\"\n                  />\n                </svg>\n                {/* Blog Link */}\n                <div class=\"h-4 bg-gray-200 rounded w-3/4\"></div>\n            </div>\n            <div class=\"border-t-2\"></div>\n\n            <div class=\"flex justify-between\">\n              <div class=\"my-2\">\n                <div class=\"h-6 bg-gray-200 rounded w-14 my-2\"></div>\n                <div class=\"h-4 bg-gray-200 rounded w-3/4\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import Axios from \"axios\";\n\nexport const getUserList = async() => {\n    const HARMONY_URL_HOST = \"https://r5fg3qi652.execute-api.ap-northeast-2.amazonaws.com/dev1/api/v1/accounts\";\n    try {\n        // 서버에서 회원 리스트를 수신\n        const result = await Axios.get(`${HARMONY_URL_HOST}`);\n\n        // 회원 데이터 출력\n        // console.log(result);\n        \n        // 회원 리스트 객체 반환\n        return result.data.data;\n    \n      } catch (error) {\n        //콘솔 에러 출력\n        console.log(error);\n        throw error;\n      }\n};\n","import React, { Component } from \"react\";\nimport UserCard from \"./UserCardComponent\";\nimport UserCardSkeleton from \"./UserCardSkeletonComponent\";\nimport * as RESTAPI from \"../../service/userList\";\n\nexport default class UserList extends Component {\n  state = {\n    pageLoading: true,\n    userListData: {},\n  };\n  constructor(props) {\n    super(props);\n  }\n  async componentDidMount() {\n    // 유저 리스트 데이터 로드\n    while (true) {\n      try {\n        // REST API\n        let result = await RESTAPI.getUserList();\n\n        // 스켈레톤 뷰를 무조건 1초이상 표시하게 한다\n        await new Promise((resolve) => {\n          setTimeout(resolve, 1000);\n        });\n\n        // 상태를 변경한다\n        this.setState({ pageLoading: false, userListData: result });\n\n        // while 문을 종료한다\n        break;\n\n      } catch (error) {\n        // 구문 실행에 실패 했을 경우\n        console.log(\"getUserList Failed, try again\");\n\n        // 1초뒤에 같은 구문을 다시 시작한다\n        await new Promise((resolve) => {\n          setTimeout(resolve, 1000);\n        });\n      }\n    }\n  }\n\n  render() {\n    // 유저 리스트 작성\n    let listView\n\n    // 유저 리스트가 componentDidMount에서 성공적으로 로드 되었을경우 시작\n    if (Object.keys(this.state.userListData).length > 0) {\n      listView = this.state.userListData.map((userData)=>{\n        console.log(userData);\n        return (<div className=\"m-5\">\n        <UserCard name={userData.name} blogLink={userData.blogLink} jobTag={userData.jobTag} profileImage={userData.profileImageUrl} />\n      </div>);\n      });\n    }\n    return (\n      <div className=\"min-h-screen bg-gray-50 justify-center\">\n        <div className=\"flex flex-row justify-center lg:py-28\">\n          <p className=\"text-sm text-gray-700 lg:text-4xl pt-5\">\n            프로젝트를 시작하기전 어떤 사람들이 있는지 확인하세요!\n          </p>\n        </div>\n        {/* 페이지 로딩 */}\n        {this.state.pageLoading ? (\n          <div className=\"flex flex-col lg:flex-row flex-wrap justify-center mr-10 ml-10 lg:mr-28 lg:ml-28\">\n            {/* Skeleton */}\n            <div className=\"m-5\">\n              <UserCardSkeleton />\n            </div>\n            <div className=\"m-5\">\n              <UserCardSkeleton />\n            </div>\n            <div className=\"m-5\">\n              <UserCardSkeleton />\n            </div>\n            <div className=\"m-5\">\n              <UserCardSkeleton />\n            </div>\n          </div>\n        ) : (\n          <div className=\"flex flex-col lg:flex-row flex-wrap justify-center mr-10 ml-10 lg:mr-28 lg:ml-28\">\n            {/* Nomal */}\n            {listView}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class ProjectCard extends Component {\n  state = {\n    projectID: \"\",\n    managerID: \"\",\n    title: \"\",\n    content: \"\",\n    date: \"\",\n    delete: \"\",\n    stateID: \"\",\n  };\n  constructor(props) {\n    super(props);\n\n    // 상태 설정\n    this.state.projectID = this.props.projectID || \"0\";\n    this.state.managerID = this.props.managerID || \"0\";\n    this.state.title = this.props.title || \"테스트 프로젝트\";\n    this.state.content = this.props.content || \"테스트 프로젝트 입니다.\";\n    this.state.date = this.props.date || \"2021.05.01\";\n    this.state.delete = this.props.delete || false;\n    this.state.stateID = this.props.stateID || \"1\";\n  }\n\n  render() {\n    return (\n      <div className=\"flex flex-col lg:flex-row flex-wrap justify-center mr-10 ml-10 lg:mr-60 lg:ml-60\">\n        <div class=\"w-full h-64 px-10 my-4 py-6 bg-white rounded-lg shadow-md\">\n          <div class=\"flex justify-between items-center\">\n            <span class=\"font-light text-gray-600\">{this.state.date}</span>\n            <a\n              class=\"px-2 py-1 bg-green-300 text-gray-100 font-bold rounded text-sm\"\n              href=\"/\"\n            >\n              진행중\n            </a>\n          </div>\n          <div class=\"mt-2\">\n            <a\n              class=\"text-2xl text-gray-700 font-bold hover:text-gray-600\"\n              href=\"/\"\n            >\n              {this.state.title}\n            </a>\n            <div className=\"inline-block w-full h-20 overflow-clip overflow-hidden\">\n              <p class=\"inline-block mt-2 text-gray-600\">\n                {this.state.content}\n              </p>\n            </div>\n          </div>\n          <div class=\"flex justify-between items-center mt-4\">\n            <a class=\"text-blue-600 hover:underline\" href=\"/\">\n              자세히\n            </a>\n            <div>\n              <a class=\"flex items-center\" href=\"/\">\n                {/*\n                <img\n                  class=\"mx-4 w-10 h-10 object-cover rounded-full sm:block\"\n                  src=\"http://k.kakaocdn.net/dn/5b4p3/btqXfJNCwln/xkWdK3xaopQHiqj3kG3DZ0/img_640x640.jpg\"\n                  alt=\"avatar\"\n                ></img>\n                <h1 class=\"text-gray-700 font-bold\">성록</h1>\n                */}\n                <h1 class=\"text-gray-700 font-bold\">일반 프로젝트</h1>\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class ProjectCardSkeleton extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"flex flex-col lg:flex-row flex-wrap justify-center mr-10 ml-10 lg:mr-60 lg:ml-60 animate-pulse\">\n        <div class=\"w-full h-64 px-10 my-4 py-6 bg-white rounded-lg shadow-md\">\n          <div class=\"flex justify-between items-center\">\n              {/* date */}\n          <div class=\"h-4 bg-gray-200 rounded w-1/4\"></div>\n            <a class=\"px-2 py-1 bg-gray-200 text-gray-100 font-bold rounded text-sm\" href=\"/\"> 진행중 </a>\n          </div>\n          <div class=\"mt-2\">\n            <a\n              class=\"text-2xl text-gray-700 font-bold hover:text-gray-600\"\n              href=\"/\"\n            >\n                {/* title */}\n              <div class=\"h-4 bg-gray-200 rounded w-2/4\"></div>\n            </a>\n            <div className=\"inline-block w-full h-20 overflow-clip overflow-hidden\">\n            <div class=\"mt-2 h-4 bg-gray-200 rounded w-1/4\"></div>\n            <div class=\"mt-2 h-4 bg-gray-200 rounded w-3/4\"></div>\n            <div class=\"mt-2 h-4 bg-gray-200 rounded w-2/4\"></div>\n            </div>\n          </div>\n          <div class=\"flex justify-between items-center mt-4\">\n            {/* title */}\n            <div class=\"h-4 bg-gray-200 rounded w-1/4\"></div>\n            <div>\n              <a class=\"flex items-center\" href=\"/\">\n                <div class=\" mx-4 w-10 h-10 object-cover rounded-full bg-gray-200\">\n          </div>\n          <div class=\"h-4 bg-gray-200 rounded w-10\"></div>\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import Axios from \"axios\";\n\nexport const getProjectList = async() => {\n    const HARMONY_URL_HOST = \"https://r5fg3qi652.execute-api.ap-northeast-2.amazonaws.com/dev1/api/v1/projects\";\n    try {\n        // 서버에서 프로젝트 리스트를 수신\n        const result = await Axios.get(`${HARMONY_URL_HOST}`);\n\n        // 프로젝트 데이터 출력\n        // console.log(result);\n        \n        // 프로젝트 리스트 객체 반환\n        return result.data.data;\n    \n      } catch (error) {\n        //콘솔 에러 출력\n        console.log(error);\n        throw error;\n      }\n};\n","import React, { Component } from \"react\";\nimport ProjectCard from \"./ProjectCardComponent\";\nimport ProjectCardSkeleton from \"./ProjectCardSkeletonComponent\";\nimport * as RESTAPI from \"../../service/projectList\";\n\nexport default class ProjectList extends Component {\n    state = {\n        pageLoading: true,\n        projectListData:{},\n      };\n    constructor(props) {\n    super(props);\n\n    this.loginButtonForKakao = this.loginButtonForKakao.bind(this);\n    this.logoutButton = this.logoutButton.bind(this);\n  }\n\n  async componentDidMount(){\n    // 프로젝트 리스트 데이터 로드\n    while(true){\n      try{\n        // 프로젝트 리스트를 요청한다\n        let result = await RESTAPI.getProjectList();\n  \n        // 스켈레톤 뷰를 무조건 1초이상 표시하게 한다\n        await new Promise((resolve) => {\n          setTimeout(resolve, 1000);\n        });\n\n        // 상태를 변경한다\n        this.setState({ pageLoading: false, projectListData: result });\n\n        //while 문을 종료한다\n        break;\n      }\n      catch(error){\n        // 구문 실행에 실패 했을 경우\n        console.log(\"getProjectList Failed, try again\");\n\n        // 1초 뒤에 같은 구문을 다시 시작한다\n        await new Promise((resolve) => {\n          setTimeout(resolve, 1000);\n        });\n      }\n    }\n  }\n\n  loginButtonForKakao() {\n    window.location.href =\n      \"https://kauth.kakao.com/oauth/authorize?client_id=dab58a800514cc429576cf0f84c83ab0&redirect_uri=http://harmony.seongrok.net/kakao/auth&response_type=code\";\n  }\n\n  logoutButton(){\n    this.props.logout()\n  }\n\n  render() {\n    // 프로젝트 리스트 작성\n    let listView;\n\n    //프로젝트 리스트가 componentDidMount에서 성공적으로 로드 되었을 경우 시작\n    if(Object.keys(this.state.projectListData).length > 0){\n      listView = this.state.projectListData.map((projectData)=>{\n        return(\n          <ProjectCard projectID={projectData.id} managerID={projectData.managerID} title={projectData.title} content={projectData.content} date={projectData.date} delete={projectData.delete} stateID={projectData.stateID} />);\n      });\n    }else{\n      listView = (<div>\n        <p className=\"text-sm text-gray-700 lg:text-4xl pt-5\">\n            등록된 프로젝트가 없습니다.\n          </p>\n      </div>);\n    }\n\n    return (\n      <div className=\"min-h-screen bg-gray-50 justify-center\">\n          {this.state.pageLoading ? (\n          <div>\n            {/* Skeleton */}\n            <ProjectCardSkeleton />\n            <ProjectCardSkeleton />\n            <ProjectCardSkeleton />\n            <ProjectCardSkeleton />\n            <ProjectCardSkeleton />\n            <ProjectCardSkeleton />\n          </div>\n        ) : (\n          <div>\n            {/* Nomal */}\n          {listView}\n          </div>\n        )}\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\n\nexport default class ProjectCreate extends Component {\n  state = {\n    title:\"\",\n    content:\"\",\n  }\n  constructor(props) {\n    super(props);\n\n    this.contentDataIsChange = this.contentDataIsChange.bind(this);\n    this.titleDataIsChange = this.titleDataIsChange.bind(this);\n    this.pressProjectCreateButton = this.pressProjectCreateButton.bind(this);\n  }\n  contentDataIsChange(data){\n    this.setState({...this.state,content:data});\n    // console.log(this.state);\n  }\n  titleDataIsChange(event){\n    this.setState({...this.state,title:event.target.value});\n    // console.log(this.state);\n  }\n  pressProjectCreateButton(){\n    console.log(this.state);\n    this.props.createProject(this.state.title,this.state.content);\n  }\n\n  render() {\n    return (\n      <div className=\"flex min-h-screen bg-gray-50 justify-center\">\n        <div className=\"flex flex-col pt-10\">\n          <div className=\" p-5 bg-white shadow-sm sm:rounded-lg w-screen lg:max-w-6xl\">\n            <div class=\"mb-4\">\n              <label class=\"text-xl text-gray-600\">\n                프로젝트명 <span class=\"text-red-500\">*</span>\n              </label>\n              <input\n                type=\"text\"\n                class=\"border-2 border-gray-300 p-2 w-full\"\n                name=\"title\"\n                id=\"title\"\n                onChange={this.titleDataIsChange}\n                required\n              ></input>\n            </div>\n            <CKEditor\n              editor={ClassicEditor}\n              data=\"<p>프로젝트 내용</p>\"\n              config={{\n                // 여기에 config 입력\n                toolbar: [ 'bold', 'italic', 'link', 'bulletedList']\n              }}\n              onReady={(editor) => {\n                // You can store the \"editor\" and use when it is needed.\n                console.log(\"Editor is ready to use!\", editor);\n                editor.editing.view.change(writer => {\n                  writer.setStyle(\n                    \"height\",\n                    \"400px\",\n                    editor.editing.view.document.getRoot()\n                  );\n                });\n              }}\n              onChange={(event, editor) => {\n                const data = editor.getData();\n                this.contentDataIsChange(data);\n                console.log({ event, editor, data });\n              }}\n              onBlur={(event, editor) => {\n                console.log(\"Blur.\", editor);\n              }}\n              onFocus={(event, editor) => {\n                console.log(\"Focus.\", editor);\n              }}\n            />\n            <div>\n                <button\n                  type=\"button\"\n                  className=\"border border-green-300 text-green-300 rounded-md px-4 py-2 mt-3 transition duration-500 ease select-none hover:text-white hover:bg-green-300 hover:border-green-300 focus:outline-none focus:shadow-outline\"\n                  onClick={this.pressProjectCreateButton}\n                >\n                  <div className=\"flex flex-row flex-nowrap align-middle justify-center\">\n                    <span>프로젝트 생성</span>\n                    \n                  </div>\n                </button>\n              </div>\n          </div>\n          \n        </div>\n      </div>\n    );\n  }\n}\n","//Error Modal Open Action\nexport const openErrorMessage = (error=\"error\",path) => async (dispatch, getState) => {\n    dispatch({ type: \"Service/ERROR_MODAL_OPEN\", size: {msg: error,path:path}});\n}\n\n//Error Modal close Action\nexport const closeErrorMessage = (path) => async (dispatch, getState) => {\n    dispatch({ type: \"Service/ERROR_MODAL_CLOSE\"});\n\n    // 확인 버튼 클릭시 path 인자가 있을경우엔 해당 path경로로 리다이렉트\n    if(path!=undefined){\n        window.location.pathname = path;\n    }\n}","import { ServiceInformaionComponent } from \"../components\";\nimport { connect } from \"react-redux\";\n\n// Import Action\nimport * as RESTAPI from \"../action/RESTAPI\";\nimport * as modal from \"../action/modal\";\n\nfunction reduxStateToReactProps(state) {\n  // 리덕스 스토어 상태를 전달\n  return {\n    APP_VERSION: state.APP_VERSION,\n    TEST_VALUE: state.TEST_VALUE,\n  };\n}\nfunction reduxDispatchToReactProps(dispatch) {\n  // dispatch 메서드를 전달\n  return {\n    setTestValue: (text) => {\n      dispatch(RESTAPI.setTestValue(text));\n    },\n    openErrorModal:(error)=>{\n      dispatch(modal.openErrorMessage(error));\n    },\n  };\n}\n\nexport default connect(\n  reduxStateToReactProps,\n  reduxDispatchToReactProps\n)(ServiceInformaionComponent);\n","/**\n * Action\n *\n * Redux 에서 상태에 변화가 필요할때 발생되는 액션\n */\nimport Axios from \"axios\";\nimport * as modal from \"../action/modal\";\n\nexport const setTestValue = (testValue) => async (dispatch, getState) => {\n  dispatch({ type: \"ServiceInformaion/SET_TEXT\", size: \"pong\" });\n};\n\n//인가코드를 이용해서 카카오 토큰정보를 로드\nexport const getKakaoToken = (kakaoCode) => async (dispatch, getState) => {\n  const KAKAO_URL_HOST =\n    \"https://kauth.kakao.com/oauth/token?grant_type=authorization_code&client_id=dab58a800514cc429576cf0f84c83ab0&redirect_uri=http://harmony.seongrok.net/kakao/auth&code=\";\n  const HARMONY_URL_HOST =\n    \"https://r5fg3qi652.execute-api.ap-northeast-2.amazonaws.com/dev1/api/v1/kakao/authorize\";\n  try {\n    //카카오 서버로부터 토큰 로드\n    const result = await Axios.get(`${KAKAO_URL_HOST}${kakaoCode}`);\n\n    // 사용자 정보 콘솔화면 표시\n    //console.log(result);\n\n    // 토큰정보 스토어 적재\n    const accessToken = result.data.access_token;\n    const refreshToken = result.data.refresh_token;\n    dispatch({\n      type: \"Service/SET_TOKEN_INFO\",\n      size: { accessToken: accessToken, refreshToken: refreshToken },\n    });\n  } catch (error) {\n    //콘솔 에러 출력\n    //console.log(error.response);\n    dispatch(\n      modal.openErrorMessage(\n        \"카카오톡 아이디 정보를 로드하는데 실패했습니다 잠시후 다시 시도해 주세요.\",\n        \"/\"\n      )\n    );\n  }\n  try {\n    // 하모니 서버에 가입유무 확인\n    //console.log(`${getState().ACCESS_TOKEN} --------> 가입확인`)\n    console.log(`${HARMONY_URL_HOST}`);\n    const result = await Axios.get(`${HARMONY_URL_HOST}`, {\n      headers: {\n        userToken: getState().ACCESS_TOKEN,\n        userTokenType: \"kakao\",\n      },\n    });\n    //회원 데이터 출력\n    //console.log(result);\n    dispatch({\n      type: \"Service/SET_USER_INFO\",\n      size: {\n        USER_ID: result.data.data.id,\n        USER_JOBTAG: result.data.data.jobTag,\n        USER_NAME: result.data.data.name,\n        USER_PROFILE: result.data.data.profileImageUrl,\n      },\n    });\n\n    //로그인 성공후에 메인 페이지로 이동\n    window.location.pathname = \"/\";\n  } catch (error) {\n    //콘솔 에러 출력\n    //console.log(error);\n    if (error.response) {\n      // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\n      //console.log(error.response.data); // 서버응답\n      //console.log(error.response.status); //400\n      //console.log(error.response.headers);\n      dispatch(modal.openErrorMessage(\"회원등록이 필요합니다\", \"/signup\"));\n    } else if (error.request) {\n      // 요청이 이루어 졌으나 응답을 받지 못했습니다.\n      // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\n      // Node.js의 http.ClientRequest 인스턴스입니다.\n      //console.log(error.request);\n      dispatch(\n        modal.openErrorMessage(\n          \"서비스가 오프라인 상태 입니다 잠시후 다시 시도해 주세요.\",\n          \"/\"\n        )\n      );\n    } else {\n      dispatch(\n        modal.openErrorMessage(\n          \"카카오톡 아이디 정보를 로드하는데 실패했습니다 잠시후 다시 시도해 주세요.\",\n          \"/\"\n        )\n      );\n    }\n  }\n};\n\n// 카카오 토큰 정보를 이용한 회원가입 요청\nexport const signUpUser = (blogLink,jobTag) => async (dispatch, getState) => {\n  const HARMONY_URL_HOST =\n  \"https://r5fg3qi652.execute-api.ap-northeast-2.amazonaws.com/dev1/api/v1/kakao/account\";\n\n  try {\n    const result = await Axios.post(`${HARMONY_URL_HOST}`, {\n      \"blogLink\": `${blogLink}`,\n      \"jobTag\": `${jobTag}`,\n    },{\n      headers: {\n        userToken: getState().ACCESS_TOKEN,\n        userTokenType: \"kakao\",\n      },\n    });\n    console.log(result);\n    dispatch(modal.openErrorMessage(\"회원가입에 성공했습니다!\", \"/\"));\n  } catch (error) {\n    console.log(error.response.data); // 서버응답\n    console.log(error.response.status); //400\n    console.log(error.response.headers);\n    dispatch(modal.openErrorMessage(\"회원가입에 실패했습니다, 허용된 문자만 입력해 주세요.\"));\n  }\n}\n\n// 프로젝트 생성 요청\nexport const createProject = (title,content) => async (dispatch,getState) => {\n  const HARMONY_URL_HOST =\n  \"https://r5fg3qi652.execute-api.ap-northeast-2.amazonaws.com/dev1/api/v1/projects\";\n\n  try {\n    const result = await Axios.post(`${HARMONY_URL_HOST}`, {\n      \"title\": `${title}`,\n      \"content\": `${content}`,\n    },{\n      headers: {\n        userToken: getState().ACCESS_TOKEN,\n        userTokenType: \"kakao\",\n        userid: getState().USER_ID,\n      },\n    });\n    console.log(result);\n    dispatch(modal.openErrorMessage(\"프로젝트를 생성하는데 성공했습니다\", \"/projectlist\"));\n  } catch (error) {\n    console.log(error.response.data); // 서버응답\n    console.log(error.response.status); //400\n    console.log(error.response.headers);\n    dispatch(modal.openErrorMessage(\"유저정보가 올바르지 않거나 금지된 문자열이 포함되어 있습니다.\"));\n  }\n}","import { NavigationBarComponent } from \"../components\";\nimport { connect } from \"react-redux\";\nimport {logout} from \"../action/logout\";\n\nfunction reduxStateToReactProps(state) {\n  // 리덕스 스토어 상태를 전달\n  return {\n    USER_LOGIN: state.USER_LOGIN,\n    USER_NAME: state.USER_NAME,\n  };\n}\nfunction reduxDispatchToReactProps(dispatch) {\n  // dispatch 메서드를 전달\n  return {\n    logout:()=>{\n      dispatch(logout())\n    }\n  };\n}\n\nexport default connect(\n  reduxStateToReactProps,\n  reduxDispatchToReactProps\n)(NavigationBarComponent);\n","//Error Modal Open Action\nexport const logout = () => async (dispatch, getState) => {\n    dispatch({ type: \"Service/LOGOUT\", size: {}});\n}","import { MainIntroductionComponent } from \"../components\";\nimport { connect } from \"react-redux\";\n\nfunction reduxStateToReactProps(state) {\n  // 리덕스 스토어 상태를 전달\n  return {};\n}\nfunction reduxDispatchToReactProps(dispatch) {\n  // dispatch 메서드를 전달\n  return {};\n}\n\nexport default connect(\n  reduxStateToReactProps,\n  reduxDispatchToReactProps\n)(MainIntroductionComponent);\n","import { FooterBarComponent } from \"../components\";\nimport { connect } from \"react-redux\";\n\nfunction reduxStateToReactProps(state) {\n  // 리덕스 스토어 상태를 전달\n  return {};\n}\nfunction reduxDispatchToReactProps(dispatch) {\n  // dispatch 메서드를 전달\n  return {};\n}\n\nexport default connect(\n  reduxStateToReactProps,\n  reduxDispatchToReactProps\n)(FooterBarComponent);\n","import { GetKakaoTokenComponent } from \"../components\";\nimport { connect } from \"react-redux\";\nimport * as RESTAPI from \"../action/RESTAPI\";\n\nfunction reduxStateToReactProps(state) {\n  // 리덕스 스토어 상태를 전달\n  return {};\n}\nfunction reduxDispatchToReactProps(dispatch) {\n  // dispatch 메서드를 전달\n  return {\n    getKakaoToken: (kakaoCode) => {\n      dispatch(RESTAPI.getKakaoToken(kakaoCode));\n    },\n  };\n}\n\nexport default connect(\n  reduxStateToReactProps,\n  reduxDispatchToReactProps\n)(GetKakaoTokenComponent);\n","import { SignUpComponent } from \"../components\";\nimport { connect } from \"react-redux\";\nimport * as RESTAPI from \"../action/RESTAPI\";\n\nfunction reduxStateToReactProps(state) {\n  // 리덕스 스토어 상태를 전달\n  return {\n  };\n}\nfunction reduxDispatchToReactProps(dispatch) {\n  // dispatch 메서드를 전달\n  return {\n    signUpUser: (blogLink,jobTag)=>{\n      dispatch(RESTAPI.signUpUser(blogLink,jobTag));\n    }\n  };\n}\n\nexport default connect(\n  reduxStateToReactProps,\n  reduxDispatchToReactProps\n)(SignUpComponent);\n","import { CautionModalComponent } from \"../components\";\nimport { connect } from \"react-redux\";\nimport * as modal from \"../action/modal\";\n\nfunction reduxStateToReactProps(state) {\n  // 리덕스 스토어 상태를 전달\n  return {\n    ERROR_STATE: state.ERROR_STATE,\n    ERROR_MSG: state.ERROR_MSG,\n    ERROR_TARGET_PATH: state.ERROR_TARGET_PATH,\n  };\n}\nfunction reduxDispatchToReactProps(dispatch) {\n  // dispatch 메서드를 전달\n  return {\n    openErrorModal:(error)=>{\n      dispatch(modal.openErrorMessage(error));\n    },\n    closeErrorModal:(path)=>{\n      dispatch(modal.closeErrorMessage(path));\n    }\n  };\n}\n\nexport default connect(\n  reduxStateToReactProps,\n  reduxDispatchToReactProps\n)(CautionModalComponent);\n","import { UserListComponent } from \"../components\";\nimport { connect } from \"react-redux\";\n\nfunction reduxStateToReactProps(state) {\n  // 리덕스 스토어 상태를 전달\n  return {\n  };\n}\nfunction reduxDispatchToReactProps(dispatch) {\n  // dispatch 메서드를 전달\n  return {\n  };\n}\n\nexport default connect(\n  reduxStateToReactProps,\n  reduxDispatchToReactProps\n)(UserListComponent);\n","import { projectListComponent } from \"../components\";\nimport { connect } from \"react-redux\";\n\n// Import Action\nimport * as RESTAPI from \"../action/RESTAPI\";\nimport * as modal from \"../action/modal\";\n\nfunction reduxStateToReactProps(state) {\n  // 리덕스 스토어 상태를 전달\n  return {\n  };\n}\nfunction reduxDispatchToReactProps(dispatch) {\n  // dispatch 메서드를 전달\n  return {\n    openErrorModal:(error)=>{\n      dispatch(modal.openErrorMessage(error));\n    },\n  };\n}\n\nexport default connect(\n  reduxStateToReactProps,\n  reduxDispatchToReactProps\n)(projectListComponent);\n","import { projectCreateComponent } from \"../components\";\nimport { connect } from \"react-redux\";\nimport * as RESTAPI from \"../action/RESTAPI\";\n\nfunction reduxStateToReactProps(state) {\n  // 리덕스 스토어 상태를 전달\n  return {\n  };\n}\nfunction reduxDispatchToReactProps(dispatch) {\n  // dispatch 메서드를 전달\n  return {\n    createProject:(title,content)=>{\n      dispatch(RESTAPI.createProject(title,content))\n    }\n  };\n}\n\nexport default connect(\n  reduxStateToReactProps,\n  reduxDispatchToReactProps\n)(projectCreateComponent);\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n// Redux 모듈\r\nimport store from \"./store/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\n//Redux Persist\r\nimport { persistStore } from 'redux-persist';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\n// Router\r\nimport { BrowserRouter, Route} from \"react-router-dom\";\r\n\r\n// Containers\r\nimport * as Containers from \"./containers\";\r\n\r\n// tailwindcss\r\nimport './index.css';\r\n\r\nconst persistor = persistStore(store);\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/\">\r\n    <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <React.StrictMode>\r\n        <Containers.CautionModal />\r\n        <Route exact path=\"/\"><Containers.NavigationBar /><Containers.MainIntroduction /><Containers.FooterBar /></Route>\r\n        <Route exact path=\"/service/info\"><Containers.ServiceInformaion /></Route>\r\n        <Route exact path=\"/kakao/auth\"><Containers.KakaoLogin /></Route>\r\n        <Route exact path=\"/signup\"><Containers.NavigationBar /><Containers.SignUp /><Containers.FooterBar /></Route>\r\n        <Route exact path=\"/userlist\"><Containers.NavigationBar /><Containers.UserList /><Containers.FooterBar /></Route>\r\n        <Route exact path=\"/projectlist\"><Containers.NavigationBar /><Containers.ProjectList /><Containers.FooterBar /></Route>\r\n        <Route exact path=\"/projectcreate\"><Containers.NavigationBar /><Containers.ProjectCreate /><Containers.FooterBar /></Route>\r\n      </React.StrictMode>\r\n      </PersistGate>\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}